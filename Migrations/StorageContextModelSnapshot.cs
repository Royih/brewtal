// <auto-generated />
using System;
using Brewtal2.Storage;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Brewtal.Migrations
{
    [DbContext(typeof(StorageContext))]
    partial class StorageContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("Brewtal2.Storage.Runtime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CurrentSessionId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Startup")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CurrentSessionId");

                    b.ToTable("Runtime");
                });

            modelBuilder.Entity("Brewtal2.Storage.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("MaxTemp")
                        .HasColumnType("REAL");

                    b.Property<double>("MinTemp")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<double>("TargetTemp")
                        .HasColumnType("REAL");

                    b.Property<TimeSpan?>("TimeToReachTarget")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("Brewtal2.Storage.Templog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("ActualTemperature")
                        .HasColumnType("REAL");

                    b.Property<int>("SessionId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SessionId");

                    b.ToTable("Templogs");
                });

            modelBuilder.Entity("Brewtal2.Storage.Runtime", b =>
                {
                    b.HasOne("Brewtal2.Storage.Session", "CurrentSession")
                        .WithMany()
                        .HasForeignKey("CurrentSessionId");

                    b.Navigation("CurrentSession");
                });

            modelBuilder.Entity("Brewtal2.Storage.Templog", b =>
                {
                    b.HasOne("Brewtal2.Storage.Session", "Session")
                        .WithMany("Logs")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Session");
                });

            modelBuilder.Entity("Brewtal2.Storage.Session", b =>
                {
                    b.Navigation("Logs");
                });
#pragma warning restore 612, 618
        }
    }
}
